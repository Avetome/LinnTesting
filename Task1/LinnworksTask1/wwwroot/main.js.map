{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/categories.service.ts","webpack:///./src/app/categories/categories.component.html","webpack:///./src/app/categories/categories.component.less","webpack:///./src/app/categories/categories.component.ts","webpack:///./src/app/errorhandler.interceptor.ts","webpack:///./src/app/testtask/testtask.component.html","webpack:///./src/app/testtask/testtask.component.less","webpack:///./src/app/testtask/testtask.component.ts","webpack:///./src/app/token.interceptor.ts","webpack:///./src/app/token.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-testtask></app-testtask>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\r\n\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { CategoriesService } from './categories.service';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCheckboxModule, MatTableModule, MatSortModule, MatSnackBarModule, MatProgressSpinnerModule } from '@angular/material';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { TesttaskComponent } from './testtask/testtask.component';\n\nimport { TokenInterceptor } from './token.interceptor';\nimport { ErrorHandlerInterceptor } from './errorhandler.interceptor';\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      CategoriesComponent,\n      TesttaskComponent,\n  ],\n  imports: [\n      BrowserModule,\n      FormsModule,\n      AppRoutingModule,\n      HttpClientModule,\n      BrowserAnimationsModule,\n      MatButtonModule,\n      MatTableModule,\n      MatCheckboxModule,\n      MatSortModule,\n      MatInputModule,\n      MatSnackBarModule,\n      MatProgressSpinnerModule\n  ],\n    providers: [\n        CategoriesService,\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: ErrorHandlerInterceptor,\r\n            multi: true\r\n        },\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: TokenInterceptor,\r\n            multi: true\r\n        },\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Category } from './category';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\n\n@Injectable({ providedIn: 'root' })\nexport class CategoriesService {\n\n    private serverUrl = 'http://localhost:5000';\n\n    constructor(private http: HttpClient)\n    {\n    }\n\n    public getCategories()\n    {\n        return this.http.get<Category[]>(this.serverUrl + \"/api/categories\")\r\n            .pipe(\r\n                tap(_ => console.log('fetched categories'))\r\n            );\r\n    }\n\n    public updateCategory(category: Category) {\n        return this.http.put(this.serverUrl + `/api/categories/${category.CategoryId}`, { categoryName: category.CategoryName })\r\n            .pipe(\r\n                tap(_ => console.log('fetched categories'))\r\n            );\r\n    }\n}\n","module.exports = \"<h2>Product categories</h2>\\r\\n<div *ngIf=\\\"isLoading; else CategoriesLIst\\\">\\r\\n    <div class=\\\"loader\\\">\\r\\n        <mat-spinner></mat-spinner>\\r\\n    </div>\\r\\n</div>\\r\\n<ng-template #CategoriesLIst>\\r\\n    <table mat-table [dataSource]=\\\"categories\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n        <ng-container matColumnDef=\\\"select\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef></th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                              (change)=\\\"$event ? selection.toggle(row) : null\\\"\\r\\n                              [checked]=\\\"selection.isSelected(row)\\\">\\r\\n                </mat-checkbox>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"CategoryName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Category name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let category\\\">\\r\\n                <div *ngIf=\\\"category.CategoryId != selectedCategory; else elseBlock\\\">\\r\\n                    {{category.CategoryName}}\\r\\n                </div>\\r\\n                <ng-template #elseBlock>\\r\\n                    <mat-form-field class=\\\"example-full-width\\\">\\r\\n                        <input #CategoryNameInput\\r\\n                               matInput type=\\\"text\\\"\\r\\n                               [(ngModel)]=\\\"category.CategoryName\\\"\\r\\n                               (keydown)=\\\"editCategoryInputKeyDown(category, $event)\\\"\\r\\n                               (focusout)=\\\"editCategoryInputFocusOut(category)\\\"\\r\\n                               [errorStateMatcher]=\\\"matcher\\\"\\r\\n                               autofocus />\\r\\n                        <mat-hint *ngIf=\\\"error.errorMessage != undefined\\\">\\r\\n                            {{error.errorMessage}}\\r\\n                        </mat-hint>\\r\\n                    </mat-form-field>\\r\\n                </ng-template>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"ProductsCount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Products count </th>\\r\\n            <td mat-cell *matCellDef=\\\"let category\\\"> {{category.ProductsCount}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Edit\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef></th>\\r\\n            <td mat-cell *matCellDef=\\\"let category\\\">\\r\\n                <button mat-button (click)=\\\"editCategoryClick(category, $event)\\\">Edit</button>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"columns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: columns;\\\" (click)=\\\"selection.toggle(row)\\\"></tr>\\r\\n\\r\\n    </table>\\r\\n</ng-template>\\r\\n\"","module.exports = \"table {\\n  width: 100%;\\n}\\n.mat-header-cell {\\n  text-align: left;\\n}\\n.mat-cell {\\n  text-align: left;\\n}\\n.mat-column-Edit {\\n  width: 64px;\\n}\\n.cdk-column-ProductsCount {\\n  width: 100px;\\n}\\n.cdk-column-CategoryName {\\n  min-width: 400px;\\n}\\n.mat-column-select {\\n  text-align: center;\\n}\\n.loader {\\n  width: 100px;\\n  margin: 50px auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2F0ZWdvcmllcy9FOi9Xb3JrL0xpbm5UZXN0aW5nL1Rhc2sxL0xpbm53b3Jrc1Rhc2sxL3NyYy9hcHAvY2F0ZWdvcmllcy9jYXRlZ29yaWVzLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9jYXRlZ29yaWVzL2NhdGVnb3JpZXMuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0NDQ0g7QURFRDtFQUNJLGlCQUFBO0NDQUg7QURHRDtFQUNJLGlCQUFBO0NDREg7QURJRDtFQUNJLFlBQUE7Q0NGSDtBREtEO0VBQ0ksYUFBQTtDQ0hIO0FETUQ7RUFDSSxpQkFBQTtDQ0pIO0FET0Q7RUFDSSxtQkFBQTtDQ0xIO0FEUUQ7RUFDSSxhQUFBO0VBQ0Esa0JBQUE7Q0NOSCIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1oZWFkZXItY2VsbCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLm1hdC1jZWxsIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4ubWF0LWNvbHVtbi1FZGl0IHtcbiAgICB3aWR0aDogNjRweDtcbn1cblxuLmNkay1jb2x1bW4tUHJvZHVjdHNDb3VudCB7XG4gICAgd2lkdGg6IDEwMHB4O1xufVxuXG4uY2RrLWNvbHVtbi1DYXRlZ29yeU5hbWUge1xuICAgIG1pbi13aWR0aDogNDAwcHg7XG59XG5cbi5tYXQtY29sdW1uLXNlbGVjdCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ubG9hZGVyIHtcbiAgICB3aWR0aDogMTAwcHg7XG4gICAgbWFyZ2luOiA1MHB4IGF1dG87XG59XG4iLCJ0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLm1hdC1oZWFkZXItY2VsbCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG4ubWF0LWNlbGwge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLm1hdC1jb2x1bW4tRWRpdCB7XG4gIHdpZHRoOiA2NHB4O1xufVxuLmNkay1jb2x1bW4tUHJvZHVjdHNDb3VudCB7XG4gIHdpZHRoOiAxMDBweDtcbn1cbi5jZGstY29sdW1uLUNhdGVnb3J5TmFtZSB7XG4gIG1pbi13aWR0aDogNDAwcHg7XG59XG4ubWF0LWNvbHVtbi1zZWxlY3Qge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4ubG9hZGVyIHtcbiAgd2lkdGg6IDEwMHB4O1xuICBtYXJnaW46IDUwcHggYXV0bztcbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material';\n\nimport { Category } from './../category';\nimport { CategoriesService } from './../categories.service';\n\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n        const isSubmitted = form && form.submitted;\r\n        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n    }\r\n}\n\n@Component({\n    selector: 'app-categories',\n    templateUrl: './categories.component.html',\n    styleUrls: ['./categories.component.less']\n})\nexport class CategoriesComponent implements OnInit {\n    public categories = [];\n    public selectedCategory: string = \"\";\n    public error: { categoryId?: string, errorMessage: string } = { categoryId: undefined, errorMessage: undefined };\n\n    private previosCategoryName: string = \"\";\n\n    public isLoading: boolean = false;\n\n    public dataSource = new MatTableDataSource<Category>(this.categories);\n    public selection = new SelectionModel<Category>(false, []);\n\n    public matcher = new MyErrorStateMatcher();\n    public categoryNameFormControl = new FormControl('', [Validators.required]);\n\n    public columns = [/*'select', */'CategoryName', 'ProductsCount', 'Edit'];\n\n    @ViewChild('CategoryNameInput') CategoryNameInput: ElementRef;\n\n    constructor(public categoriesService: CategoriesService) {\n    }\n\n    ngOnInit()\n    {\n        this.isLoading = true;\n\n        this.categoriesService\n            .getCategories()\n            .subscribe(categories => {\n                this.categories = categories\r\n                this.isLoading = false;\r\n            });\n    }\n\n    editCategoryClick(category: Category, event: MouseEvent) {\n        this.selectedCategory = category.CategoryId;\r\n        this.previosCategoryName = category.CategoryName;\r\n\r\n        event.stopPropagation();\r\n\r\n        setTimeout(() => {\r\n            this.CategoryNameInput.nativeElement.focus();\r\n        }, 0);\r\n\r\n        return false;\r\n    }\n\n    editCategoryInputFocusOut(category: Category) {\r\n        this.editCategory(category);\r\n    }\n\n    editCategoryInputKeyDown(category: Category, event: KeyboardEvent) {\r\n\r\n        // enter\r\n        if (event.keyCode === 13) {\r\n            this.editCategory(category);\r\n        }\r\n\r\n        // esc\r\n        if (event.keyCode === 27) {\r\n            category.CategoryName = this.previosCategoryName;\r\n            this.error = { categoryId: undefined, errorMessage: undefined };\r\n            this.selectedCategory = \"\";\r\n        }\r\n    }\n\n    isAllSelected() {\r\n        const numSelected = this.selection.selected.length;\r\n        const numRows = this.dataSource.data.length;\r\n        return numSelected === numRows;\r\n    }\r\n\r\n    masterToggle() {\r\n        this.isAllSelected() ?\r\n            this.selection.clear() :\r\n            this.dataSource.data.forEach(row => this.selection.select(row));\r\n    }\n\n    private editCategory(category: Category) {\n        if (category.CategoryName === this.previosCategoryName) {\n            this.error = { categoryId: undefined, errorMessage: undefined };\r\n            this.selectedCategory = \"\";\r\n            return;\r\n        }\n\n        if (!category.CategoryName) {\n            this.error.categoryId = category.CategoryId;\r\n            this.error.errorMessage = \"Сategory name can't be empty\";\r\n\r\n            this.CategoryNameInput.nativeElement.focus();\r\n\r\n            return;\n        }\n\n        let existedCatWithSameName: Category[] = this.categories.filter((cat: Category) => cat.CategoryName == category.CategoryName && cat.CategoryId != category.CategoryId);\r\n\r\n        if (existedCatWithSameName.length != 0) {\r\n            this.error.categoryId = category.CategoryId;\r\n            // this.error.errorMessage = \"There is already exists category with same name\";\r\n            this.error.errorMessage = \"Dublicate category name\";\r\n\r\n            this.CategoryNameInput.nativeElement.focus();\r\n\r\n            return;\r\n        }\r\n\r\n        this.categoriesService.updateCategory(category).subscribe(() => {\r\n            this.error = { categoryId: undefined, errorMessage: undefined };\r\n            this.selectedCategory = \"\";\r\n        });\r\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { TokenService } from './token.service';\r\n\r\n@Injectable()\r\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        public snackBar: MatSnackBar,\r\n        public tokenService: TokenService) {\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        return next.handle(request).pipe(tap((event: HttpEvent<any>) => {\r\n        }, (err: any) => {\r\n            if (err instanceof HttpErrorResponse) {\r\n                if (err.status === 401) {\r\n                    let snackBarRef = this.snackBar.open(\"Invalid authorization token\", null, {\r\n                        duration: 2000,\r\n                    });\r\n\r\n                    snackBarRef.afterDismissed().subscribe(() => {\r\n                        this.tokenService.clearToken();\r\n                        window.location.reload();\r\n                    });\r\n                }\r\n            }\r\n        }));\r\n    }\r\n}\r\n","module.exports = \"<div>\\r\\n    <div *ngIf=\\\"tokenSuccess == false; else Categories\\\" class=\\\"login\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n            <input matInput\\r\\n                   #TokenInput\\r\\n                   placeholder=\\\"Enter the token\\\"\\r\\n                   type=\\\"text\\\"\\r\\n                   [(ngModel)]=\\\"token\\\"\\r\\n                   autofocus />\\r\\n        </mat-form-field>\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"enterTokenClick()\\\" disabled=\\\"{{!token}}\\\">Enter!</button>\\r\\n    </div>\\r\\n    <ng-template #Categories><app-categories></app-categories></ng-template>\\r\\n</div>\\r\\n\"","module.exports = \".login {\\n  position: absolute;\\n  width: 300px;\\n  height: 60px;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n}\\n.login button {\\n  margin-left: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdHRhc2svRTovV29yay9MaW5uVGVzdGluZy9UYXNrMS9MaW5ud29ya3NUYXNrMS9zcmMvYXBwL3Rlc3R0YXNrL3Rlc3R0YXNrLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC90ZXN0dGFzay90ZXN0dGFzay5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLGFBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLHlDQUFBO1VBQUEsaUNBQUE7Q0NDSDtBRENHO0VBQ0ksa0JBQUE7Q0NDUCIsImZpbGUiOiJzcmMvYXBwL3Rlc3R0YXNrL3Rlc3R0YXNrLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGhlaWdodDogNjBweDtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgLy8gSEFDSzpcbiAgICAmIGJ1dHRvbiB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICAgIH1cbn1cbiIsIi5sb2dpbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDMwMHB4O1xuICBoZWlnaHQ6IDYwcHg7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuLmxvZ2luIGJ1dHRvbiB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuIl19 */\"","import { Component, ViewChild, OnInit, ElementRef } from '@angular/core';\n\nimport { TokenService } from './../token.service';\n\n@Component({\n  selector: 'app-testtask',\n  templateUrl: './testtask.component.html',\n  styleUrls: ['./testtask.component.less']\n})\nexport class TesttaskComponent implements OnInit {\n    public token = undefined;\n\n    public tokenSuccess: boolean = false;\n\n    @ViewChild('TokenInput') TokenInput: ElementRef;\n\n    constructor(public tokenService: TokenService) {\n    }\n\n    ngOnInit() {\n        this.token = this.tokenService.getToken();\n\n        if (this.token) {\n            this.tokenSuccess = true;\r\n        }\n    }\n\n    enterTokenClick() {\n        var token = this.TokenInput.nativeElement.value;\r\n\r\n        this.tokenService.setToken(token);\r\n\r\n        this.tokenSuccess = true;\r\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { TokenService } from './token.service';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n    constructor(public tokenService: TokenService) {\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        request = request.clone({\r\n            setHeaders: {\r\n                Authorization: `${this.tokenService.getToken()}`\r\n            }\r\n        });\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\n@Injectable({ providedIn: 'root' })\nexport class TokenService {\n\n    private token = undefined;\n    private LOCAL_STORAGE_TOKEN_KEY = \"TOKEN_KEY_FOR_API\";\n\n    constructor() {\n        var tokenFromLs = window.localStorage.getItem(this.LOCAL_STORAGE_TOKEN_KEY);\n\n        if (tokenFromLs && this.validateToken(tokenFromLs)) {\n            this.token = tokenFromLs;\r\n        }\n    }\n\n    public setToken(token: string) {\n        if (!token || !this.validateToken(token)) {\n            console.error(\"Token error\");\r\n            return;\r\n        }\n\n        this.token = token;\r\n        window.localStorage.setItem(this.LOCAL_STORAGE_TOKEN_KEY, token);\r\n    }\n\n    public getToken() {\r\n        return this.token;\r\n    }\n\n    public clearToken() {\r\n        this.token = undefined;\r\n        window.localStorage.setItem(this.LOCAL_STORAGE_TOKEN_KEY, undefined);\r\n    }\n\n    private validateToken(token: string) {\n        return token.length >= 32;\r\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}